<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Crossword</title>
    <style>
        
        body {
    background-color: #f9e3e3; /* Light pink background color */
    color: #333; /* Dark text color for better readability */
    font-family: 'Arial', sans-serif; /* Choose your preferred font family */
}

h1, h3 {
    color: #e44d4d; /* Dark pink heading color */
}

table {
    border-collapse: collapse;
    margin-top: 20px;
}

td {
    border: 1px solid #e44d4d; /* Dark pink border for table cells */
    width: 30px;
    height: 30px;
    text-align: center;
}

select, button {
    margin: 10px 0;
    padding: 8px;
    font-size: 16px;
    background-color: #e44d4d; /* Dark pink background color for dropdown and button */
    color: #fff; /* White text color for better visibility */
    border: none;
    cursor: pointer;
}
        .blue-text {
    color: blue;
}
.grid-cell {
            width: 30px;
            height: 30px;
            border: 1px solid black;
            display: inline-block;
            text-align: center;
            line-height: 30px;
        }
        .non-word {
            color: red;
        }

/* Styling for the dropdown arrow */
select {
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="%23ffffff"><path d="M10 12l-7-7 1.5-1.5L10 9l5.5-5.5L17 5z"/></svg>');
    background-repeat: no-repeat;
    background-position: right 10px top 50%;
}

button:hover, select:hover {
    background-color: #d14242; /* Slightly darker pink on hover */
}


    </style>
</head>
<body>
    <h1>15x15 Crossword</h1>
    <h1>Ella Bilu</h1>
    <p>Miranda</p>
<label for="theme">Select a theme:</label>
    <select id="theme">
        <option id="soccer">Soccer</option>
        <option id="baseball">Baseball</option>
        <option id="hockey">Hockey</option>
        <option id="lacrosse">Lacrosse</option>
    </select>
    <button onclick="generateRandomCrossword()">Generate Random Crossword</button>
    <form id="themeForm" action="/" method="GET">
        <label for="theme">Enter a theme word:</label>
        <input type="text" id="theme" name="theme" required>
        <button type="submit">Go</button>
    </form>
    <div id="wordList">
        <h3>Words to Find:</h3>
        <ul>
            <% data.forEach((item) => { %>
                <% if (typeof item === 'string') { %>
                    <!-- If item is a string, directly add it to the list -->
                    <li><%= item %></li>
                <% } else { %>
                    <!-- If item is an object, assume it has 'word' property -->
                    <li><%= item.word %></li>
                <% } %>
            <% }); %>
        </ul>
    </div>
    

   <table id="crosswordTable">
    <% grid.forEach((row, rowIndex) => { %>
        <div>
            <% row.forEach((cell, colIndex) => { %>
                <div class="grid-cell <%= cell.isPartOfWord ? cell.wordClass : 'non-word' %>"><%= cell.letter %></div>
            <% }); %>
        </div>
    <% }); %>
</table>



    
    <% if (theme && grid.length > 0) { %>
    <form action="/save-crossword" method="POST">
        <input type="hidden" name="theme" value="<%= theme %>">
        <!-- Serialize the grid data and send it as a hidden input -->
        <input type="hidden" name="grid" value="<%= JSON.stringify(grid) %>">
        <% data.forEach((item, index) => { %>
        <input type="hidden" name="words[<%= index %>]" value="<%= item.word %>">
    <% }); %>
        <button type="submit">Save Crossword to Profile</button>
    </form>
<% } %>
    <div id="savedCrosswords">
    <h3>Saved Crosswords:</h3>
    <ul>
        <% user.crosswords.forEach((crossword, index) => { %>
            <li>
                <a href="/crossword/<%= crossword.crosswordId %>">Crossword <%= index + 1 %></a>
            </li>
        <% }); %>
    </ul>
</div>
<!--
<script>
        document.addEventListener("DOMContentLoaded", function() {
            const crosswordTable = document.getElementById('crosswordTable');
            const wordListItems = Array.from(document.querySelectorAll('#wordList li')); // Convert NodeList to array
            const selectedCells = [];

            crosswordTable.addEventListener('mousedown', startHighlight);
            crosswordTable.addEventListener('mouseover', highlightCell);
            crosswordTable.addEventListener('mouseup', endHighlight);

            function startHighlight(event) {
                console.log('mousedown event triggered');
                if (event.target.tagName === 'TD') {
                    event.preventDefault();
                    clearSelection();
                    const cell = event.target;
                    console.log('mousedown cell:', cell.textContent);
                    cell.classList.add('highlight');
                    selectedCells.push(cell);
                }
            }

            function highlightCell(event) {
                console.log('mouseover event triggered');
                if (event.buttons === 1 && event.target.tagName === 'TD') {
                    const cell = event.target;
                    console.log('mouseover cell:', cell.textContent);
                    if (!selectedCells.includes(cell)) {
                        cell.classList.add('highlight');
                        selectedCells.push(cell);
                    }
                }
            }

            function endHighlight() {
                console.log('mouseup event triggered');
                const selectedWord = getSelectedWord();
                if (selectedWord) {
                    strikeWord(selectedWord);
                }
                clearSelection();
            }

            function getSelectedWord() {
    const selectedLetters = selectedCells.map(cell => cell.textContent).join('').toLowerCase(); // Convert selected letters to lowercase
    console.log('selectedLetters:', selectedLetters);
    return wordListItems.find(item => item.textContent.toLowerCase() === selectedLetters); // Convert list item to lowercase for comparison
}


            function strikeWord(wordItem) {
                if (wordItem) {
                    wordItem.style.textDecoration = 'line-through';
                    selectedCells.forEach(cell => {
                        cell.classList.add('blue-text');
                    });
                }
            }

            function clearSelection() {
                selectedCells.forEach(cell => {
                    cell.classList.remove('highlight');
                });
                selectedCells.length = 0;
            }
        });
    </script>
-->


</body>
</html>
